package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.21 DO NOT EDIT.

import (
	"bookstop/models"
	"context"
	"fmt"
	"strconv"
	"time"
)

// Events is the resolver for the events field.
func (r *queryResolver) Events(ctx context.Context) ([]*models.Event, error) {
	return models.FindAllEvents(ctx)
}

// Event is the resolver for the event field.
func (r *queryResolver) Event(ctx context.Context, id string) (*models.Event, error) {
	idNum, _ := strconv.Atoi(id)
	return models.FindEventByID(ctx, idNum)
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) CreateEvent(ctx context.Context, name string, description string, startTime time.Time, endTime time.Time, locationID *string) (*models.Event, error) {
	panic(fmt.Errorf("not implemented: CreateEvent - createEvent"))
}
func (r *mutationResolver) UpdateEvent(ctx context.Context, id string, name *string, description *string, startTime *time.Time, endTime *time.Time, locationID *string) (*models.Event, error) {
	panic(fmt.Errorf("not implemented: UpdateEvent - updateEvent"))
}
func (r *mutationResolver) DeleteEvent(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteEvent - deleteEvent"))
}
